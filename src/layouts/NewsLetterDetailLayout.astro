---
const { id, summary } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const title = `Creator Telescope - ${id}`;
import creatorTelescopeLogo from "../assets/creator-telescope-logo.svg";

const socialImageURL = new URL(creatorTelescopeLogo.src, Astro.site);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="referrer" content="never" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
    />
    <link rel="canonical" href={canonicalURL} />
    
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <title>{title}</title>
    <meta name="description" content={summary} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content='article' />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={summary} />
    <meta property="og:image" content={socialImageURL} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={summary} />
    <meta property="twitter:image" content={socialImageURL} />

    <!-- 可选: 额外的社交媒体标签 -->
    <!-- 微信分享 -->
    <meta itemprop="name" content={title} />
    <meta itemprop="description" content={summary} />
    <meta itemprop="image" content={socialImageURL} />

    <!-- QQ 分享 -->
    <meta name="qq:title" content={title} />
    <meta name="qq:description" content={summary} />
    <meta name="qq:image" content={socialImageURL} />

    <!-- 微博分享 -->
    <meta property="weibo:title" content={title} />
    <meta property="weibo:description" content={summary} />
    <meta property="weibo:image" content={socialImageURL} />
    <meta property="weibo:webpage:type" content='article' />
    <meta property="weibo:webpage:url" content={canonicalURL} />

    <!-- 百度分享 -->
    <meta name="baidu:title" content={title} />
    <meta name="baidu:description" content={summary} />
    <meta name="baidu:image" content={socialImageURL} />

    <!-- 百度移动搜索 -->
    <meta name="mobile-agent" content={`format=html5;url=${canonicalURL}`}>
  </head>
  <body>
    <!-- 阅读进度条 -->
    <div class="reading-progress-container">
      <div class="reading-progress-bar"></div>
    </div>
    
    <!-- 回到顶部按钮 -->
    <button id="back-to-top" class="back-to-top" style="display: none;">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="18,15 12,9 6,15"></polyline>
      </svg>
    </button>
    
    <div class="newsletterdetail__body">
      <div class="newsletterdetail__main">
        <slot />
      </div>
    </div>
    
    <script is:inline>
      // 阅读进度条功能
      function initReadingProgress() {
        const progressBar = document.querySelector('.reading-progress-bar');
        const main = document.querySelector('.newsletterdetail__main');
        
        if (!progressBar || !main) return;
        
        function updateProgress() {
          const scrollTop = window.pageYOffset;
          const docHeight = document.body.offsetHeight;
          const winHeight = window.innerHeight;
          const totalScroll = docHeight - winHeight;
          const progress = Math.min(Math.max(scrollTop / totalScroll, 0), 1);
          
          progressBar.style.transform = `scaleX(${progress})`;
          
          // 触发完成动画
          if (progress >= 0.98 && !progressBar.classList.contains('completed')) {
            progressBar.classList.add('completed');
            setTimeout(() => {
              progressBar.classList.remove('completed');
            }, 600);
          }
        }
        
        window.addEventListener('scroll', updateProgress, { passive: true });
        updateProgress(); // 初始化
      }
      
      // 回到顶部功能
      function initBackToTop() {
        const backToTopBtn = document.getElementById('back-to-top');
        if (!backToTopBtn) return;
        
        // 监听滚动事件
        function handleScroll() {
          if (window.pageYOffset > 300) {
            backToTopBtn.style.display = 'flex';
          } else {
            backToTopBtn.style.display = 'none';
          }
        }
        
        // 点击回到顶部
        function scrollToTop() {
          window.scrollTo({
            top: 0,
            behavior: 'smooth'
          });
        }
        
        window.addEventListener('scroll', handleScroll, { passive: true });
        backToTopBtn.addEventListener('click', scrollToTop);
      }
      
      // 图片错误处理
      function initImageErrorHandling() {
        const images = document.querySelectorAll('.newsletterdetail__main img');
        
        images.forEach(img => {
          img.addEventListener('error', function() {
            // 创建占位符
            const placeholder = document.createElement('div');
            placeholder.className = 'image-placeholder';
            
            // 替换失效图片
            img.parentNode.replaceChild(placeholder, img);
          });
          
          // 检查图片是否已经加载失败
          if (img.complete && img.naturalWidth === 0) {
            img.dispatchEvent(new Event('error'));
          }
        });
      }
      
      // 页面加载完成后初始化功能
      document.addEventListener('DOMContentLoaded', function() {
        initReadingProgress();
        initBackToTop();
        initImageErrorHandling();
      });
    </script>
  </body>
</html>

<style>
  /* montserrat-regular - latin */
  @font-face {
    font-family: "Montserrat";
    font-style: normal;
    font-weight: 400;
    src:
      local(""),
      url("/fonts/montserrat/montserrat-v23-latin-regular.woff2")
        format("woff2"),
      /* Chrome 26+, Opera 23+, Firefox 39+ */
        url("/fonts/montserrat/montserrat-v23-latin-regular.woff")
        format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
  }
  /* montserrat-600 - latin */
  @font-face {
    font-family: "Montserrat";
    font-style: normal;
    font-weight: 600;
    src:
      local(""),
      url("/fonts/montserrat/montserrat-v23-latin-600.woff2")
        format("woff2"),
      /* Chrome 26+, Opera 23+, Firefox 39+ */
        url("/fonts/montserrat/montserrat-v23-latin-600.woff")
        format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
  }
  /* montserrat-italic - latin */
  @font-face {
    font-family: "Montserrat";
    font-style: italic;
    font-weight: 400;
    src:
      local(""),
      url("/fonts/montserrat/montserrat-v23-latin-italic.woff2")
        format("woff2"),
      /* Chrome 26+, Opera 23+, Firefox 39+ */
        url("/fonts/montserrat/montserrat-v23-latin-italic.woff")
        format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
  }
  /* montserrat-600italic - latin */
  @font-face {
    font-family: "Montserrat";
    font-style: italic;
    font-weight: 600;
    src:
      local(""),
      url("/fonts/montserrat/montserrat-v23-latin-600italic.woff2")
        format("woff2"),
      /* Chrome 26+, Opera 23+, Firefox 39+ */
        url("/fonts/montserrat/montserrat-v23-latin-600italic.woff")
        format("woff"); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
  }

  html,
  body {
    margin: 0;
    padding: 0;

    /* 更适合中文阅读的字体设置 */
    font-family: "Montserrat", "SF UI Text", "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", "Segoe UI", "Helvetica Neue", Helvetica, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", sans-serif !important;
  }

  body {
    width: 100%;
    display: flex;
    justify-content: center;
    min-height: 100vh;
    
    /* Vercel 风格的精致背景系统 */
    background-color: #fcfcfc;
    background-image: 
      /* 微妙的径向渐变 */
      radial-gradient(600px circle at 50% 0%, rgba(0, 0, 0, 0.02) 0%, transparent 50%),
      /* 精致的几何网格 */
      linear-gradient(90deg, rgba(0, 0, 0, 0.015) 1px, transparent 1px),
      linear-gradient(rgba(0, 0, 0, 0.015) 1px, transparent 1px),
      /* 动态线条纹理 */
      linear-gradient(45deg, transparent 0%, transparent 48%, rgba(0, 0, 0, 0.008) 49%, rgba(0, 0, 0, 0.008) 51%, transparent 52%),
      linear-gradient(135deg, transparent 0%, transparent 48%, rgba(0, 0, 0, 0.006) 49%, rgba(0, 0, 0, 0.006) 51%, transparent 52%);
    
    background-size: 
      100% 400px,
      40px 40px,
      40px 40px,
      160px 160px,
      120px 120px;
    
    background-position:
      0 0,
      0 0,
      0 0,
      0 0,
      0 0;
    
    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  body.page-transition {
    opacity: 0;
  }
  
  /* 阅读进度条样式 */
  .reading-progress-container {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background-color: rgba(0, 0, 0, 0.06);
    z-index: 1000;
  }
  
  .reading-progress-bar {
    height: 100%;
    background: linear-gradient(90deg, #333333 0%, #1a1a1a 50%, #000000 100%);
    transform-origin: left center;
    transform: scaleX(0);
    transition: transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    
    /* 增强的发光效果 */
    box-shadow: 
      0 0 4px rgba(0, 0, 0, 0.4),
      0 0 8px rgba(0, 0, 0, 0.2),
      0 0 12px rgba(0, 0, 0, 0.1);
    
    /* 进度条完成时的微妙脉冲 */
    &.completed {
      animation: progress-complete 0.6s ease-out;
    }
  }
  
  @keyframes progress-complete {
    0% {
      box-shadow: 
        0 0 4px rgba(0, 0, 0, 0.4),
        0 0 8px rgba(0, 0, 0, 0.2),
        0 0 12px rgba(0, 0, 0, 0.1);
    }
    50% {
      box-shadow: 
        0 0 8px rgba(0, 0, 0, 0.6),
        0 0 16px rgba(0, 0, 0, 0.3),
        0 0 24px rgba(0, 0, 0, 0.15);
    }
    100% {
      box-shadow: 
        0 0 4px rgba(0, 0, 0, 0.4),
        0 0 8px rgba(0, 0, 0, 0.2),
        0 0 12px rgba(0, 0, 0, 0.1);
    }
  }

  .newsletterdetail__body {
    width: 100%;
    max-width: 680px;
    padding: 24px 16px;

    box-sizing: border-box;
    
    /* 移动端减少外层padding */
    @media (max-width: 640px) {
      padding: 16px 12px;
    }
    
    @media (max-width: 480px) {
      padding: 12px 8px;
    }

    .newsletterdetail__main {
      width: 100%;

      overflow: hidden;
      border-radius: 12px;

      box-sizing: border-box;
      border: 1px solid rgba(0, 0, 0, 0.06);
      padding: 40px;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(12px);

      /* 升级的多层阴影系统 */
      box-shadow: 
        0 1px 3px rgba(0, 0, 0, 0.06),
        0 4px 8px rgba(0, 0, 0, 0.04),
        0 8px 16px rgba(0, 0, 0, 0.02),
        0 16px 32px rgba(0, 0, 0, 0.01),
        0 0 0 1px rgba(255, 255, 255, 0.08) inset;

      /* 优化排版字间距和行高 */
      line-height: 1.8;
      letter-spacing: 0.015em;
      color: #1a1a1a;
      font-size: 16px;

      h1, h2, h3, h4, h5, h6 {
        line-height: 1.3;
        letter-spacing: -0.02em;
        margin-top: 2.4em;
        margin-bottom: 1em;
        font-weight: 600;
        color: #000000;
      }
      
      h1 {
        font-size: 2.2em;
        font-weight: 700;
        margin-bottom: 1.2em;
      }
      
      h2 {
        font-size: 1.8em;
        margin-top: 2em;
      }
      
      h3 {
        font-size: 1.4em;
        margin-top: 1.8em;
      }
      
      h1:first-child, h2:first-child, h3:first-child {
        margin-top: 0;
      }

      p {
        margin-bottom: 1.6em;
        word-spacing: 0.05em;
        font-weight: 400;
      }

      img {
        width: 100%;
        border-radius: 3px;
        margin: 1.5em 0;
        transition: opacity 0.3s ease;
      }
      
      /* 图片加载失败占位符 */
      .image-placeholder {
        width: 100%;
        height: 200px;
        border-radius: 3px;
        margin: 1.5em 0;
        background: linear-gradient(135deg, #fafafa 0%, #f0f0f0 100%);
        border: 1px solid rgba(0, 0, 0, 0.06);
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        color: #999999;
        font-size: 14px;
        
        /* 笑脸图标 */
        &::before {
          content: '😊';
          font-size: 32px;
          margin-bottom: 8px;
          display: block;
        }
        
        &::after {
          content: '图片加载失败';
          font-size: 12px;
          color: #cccccc;
        }
      }
      
      /* 移动端进一步优化padding */
      @media (max-width: 640px) {
        padding: 20px;
      }
      
      @media (max-width: 480px) {
        padding: 16px;
        border-radius: 6px;
      }
      
      ul, ol {
        line-height: 1.8;
        margin: 1.2em 0;
        padding-left: 1.8em;
      }
      
      li {
        margin-bottom: 0.5em;
      }
      
      blockquote {
        line-height: 1.7;
        letter-spacing: 0.01em;
        margin: 1.5em 0;
        padding: 1em 1.5em;
        border-left: 3px solid rgba(0, 0, 0, 0.1);
        background-color: rgba(0, 0, 0, 0.02);
      }
    }
  }
  
  /* 回到顶部按钮样式 */
  .back-to-top {
    position: fixed;
    bottom: 24px;
    right: 24px;
    width: 52px;
    height: 52px;
    
    background: linear-gradient(135deg, #ffffff 0%, #fafafa 100%);
    border: 1px solid rgba(0, 0, 0, 0.06);
    border-radius: 50%;
    
    display: flex;
    align-items: center;
    justify-content: center;
    
    color: #666666;
    cursor: pointer;
    
    /* 精致的多层阴影 */
    box-shadow: 
      0 2px 4px rgba(0, 0, 0, 0.08),
      0 4px 8px rgba(0, 0, 0, 0.06),
      0 8px 16px rgba(0, 0, 0, 0.04),
      0 16px 32px rgba(0, 0, 0, 0.02),
      0 0 0 1px rgba(255, 255, 255, 0.2) inset,
      0 1px 0 rgba(255, 255, 255, 0.4) inset;
    
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateY(0) scale(1);
    will-change: transform, box-shadow, border-color;
    
    z-index: 1000;
  }
  
  .back-to-top:hover {
    border-color: rgba(0, 0, 0, 0.12);
    color: #333333;
    background: linear-gradient(135deg, #ffffff 0%, #f8f8f8 100%);
    
    /* 悬停状态的深度阴影 */
    box-shadow: 
      0 4px 8px rgba(0, 0, 0, 0.12),
      0 8px 16px rgba(0, 0, 0, 0.08),
      0 16px 32px rgba(0, 0, 0, 0.06),
      0 32px 64px rgba(0, 0, 0, 0.04),
      0 0 0 1px rgba(255, 255, 255, 0.3) inset,
      0 2px 0 rgba(255, 255, 255, 0.6) inset;
    
    transform: translateY(-4px) scale(1.08);
  }
  
  .back-to-top:active {
    transform: translateY(-2px) scale(1.04);
    transition: all 0.15s cubic-bezier(0.4, 0, 0.6, 1);
    
    box-shadow: 
      0 2px 4px rgba(0, 0, 0, 0.15),
      0 4px 8px rgba(0, 0, 0, 0.1),
      0 8px 16px rgba(0, 0, 0, 0.08),
      0 0 0 1px rgba(255, 255, 255, 0.2) inset;
  }
</style>
